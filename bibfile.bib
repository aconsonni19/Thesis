@misc{mitre_glossary,
  author = {MITRE},
  title = {Common Weakness Enumeration Glossary},
  year = {2024},
  note = {Accesso effettuato il 26 settembre 2025},
  url = {https://cwe.mitre.org/documents/glossary/},
}

@article{static_analysis_introduction,
author = {Thomson, Patrick},
title = {Static analysis},
year = {2021},
issue_date = {January 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {65},
number = {1},
issn = {0001-0782},
url = {https://doi.org/10.1145/3486592},
doi = {10.1145/3486592},
abstract = {The fundamental challenge of software engineering is one of complexity.},
journal = {Commun. ACM},
month = dec,
pages = {50â€“54},
numpages = {5}
}

@InProceedings{Review_of_static_analysis,
author="Xu, Yixiao
and Zhang, Man
and Wang, Xiaopeng
and Chen, Junhan
and Liang, Rufeng
and Zhen, Yong
and Zhen, Chencong",
editor="Li, Shaofan",
title="A Review of Code Vulnerability Detection Techniques Based on Static Analysis",
booktitle="Computational and Experimental Simulations in Engineering",
year="2024",
publisher="Springer Nature Switzerland",
address="Cham",
pages="251--272",
abstract="Blockchain-based applications, such as web3.0, play an increasingly important role in the future internet, but security issues pose a significant threat to their development. Static analysis techniques can help mitigate software vulnerabilities, including those in smart contracts, by analyzing the source code of blockchain-based applications without executing it to identify potential security issues. This paper provides a comprehensive overview of the relationship between blockchain-based applications and static analysis-based code vulnerability detection techniques with a focus on smart contracts. First, it introduces the background of both blockchain and static analysis techniques. Then, it discusses the theoretical foundation of static analysis and the different analysis methods based on intermediate representations of code. It also offers a review of the key techniques and achievements in the fields of traditional static analysis and learning-based analysis, highlighting the particular challenges of applying them to smart contracts. Finally, the paper discusses the challenges in code vulnerability detection based on static analysis and provides potential future research directions. Our literature review aims to provide software developers and researchers with a comprehensive perspective on the relationship among blockchain-based applications, smart contracts and static analysis-based code vulnerability detection techniques, which can help enhance the security of these applications and promote their practical application in the future internet.",
isbn="978-3-031-44947-5"
}

@INPROCEEDINGS{Bintaint,
  author={Feng, Zenan and Wang, Zhenyu and Dong, Weiyu and Chang, Rui},
  booktitle={2018 International Conference on Cloud Computing, Big Data and Blockchain (ICCBB)}, 
  title={Bintaint: A Static Taint Analysis Method for Binary Vulnerability Mining}, 
  year={2018},
  volume={},
  number={},
  pages={1-8},
  keywords={Decoding;Data mining;Explosions;Tools;Pollution;Software;Flow graphs;taint analysis;vulnerability mining;path explosion},
  doi={10.1109/ICCBB.2018.8756383}}